@font-face {
    /* "How to host your own fonts made simple" by Kevin Powell + https://caniuse.com/?search=woff2. */
    font-family: Samim;
    /*
        Don't add "." (dot) at the beginning of url. Doing that would result in relative url based on the url that
        this css file is loaded. So as a result it would try to grab the font from "/public/css/public/fonts/..."
        (notice double "public") and it will get 404.
    */
    src: local(),
        url('/public/fonts/Samim-FD.woff2') format('woff2'),
        url('/public/fonts/Samim.woff') format('woff');
    font-weight: normal;
}

@font-face {
    font-family: Samim;
    src: local(),
        url('/public/fonts/Samim-Bold-FD.woff2') format('woff2'),
        url('/public/fonts/Samim-Bold.woff') format('woff');
    font-weight: bold;
}

@font-face {
    font-family: Samim;
    src: local(),
        url('/public/fonts/Samim-Medium-FD.woff2') format('woff2'),
        url('/public/fonts/Samim-Medium.woff') format('woff');
    font-weight: 500;
}

:root {
    --fs-200: .625rem;
    --fs-300: .75rem;
    --fs-350: .875rem;
    --fs-400: 1rem;
    --fs-450: 1.25rem;
    --fs-500: 1.5rem;
    --fs-600: 1.75rem;
    --fs-700: 2.25rem;
    --border-radius: .75rem;
    --clr-dark-red: #b30101;
    --clr-pale-red: #f5adad4e;
    --clr-accent-hover: #00a1ab;
}

@media (max-width: 37.5rem) {
    :root {
        --fs-200: .625rem;
        --fs-300: .75rem;
        --fs-350: .825rem;
        --fs-400: 1rem;
        --fs-450: 1.125rem;
        --fs-500: 1.325rem;
        --fs-600: 1.625rem;
        --fs-700: 2rem;
    }
}


*, *::after, *::before {
    box-sizing: border-box;
}

h1, h2, h3, h4, p {
    margin: 0;
    /* Why? headings are used for semantic purpose. For styling we will use css classes. */
    font-size: inherit;
    font-weight: normal;
}

button, input, select, optgroup, textarea {
    font-family: inherit;
}

img {
    display: block;
}

html {
    font-family: Samim, Tahoma, sans-serif;
    line-height: 1.6;
    font-size: var(--fs-400);
}

body {
    margin: 0;
    width: 100%;
    /*  It is crucial so that <main> can fill remaining vertical space. Since margin: 0 it's ok to specify
        100vh. 100% doesn't work unless we set 100% on <html> element too.
    */
    height: 100vh;
    overscroll-behavior: none;
}

/* ---- utility classes ------- */
.u-hide-visually {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

.u-container {
    max-width: var(--custom-max-width, 50rem);
    margin: 0 auto;
    /* padding so that it doesn't touch edges on small screens. */
    padding: 0 .5rem;
}

/* Remove inconsistency of collapsing margins. */
.u-flow-content > * + * {
    margin-top: var(--custom-space, 1rem);
}

.en[dir="ltr"] {
    font-family: 'Courier New', Courier, monospace;
}

.h1 {
    font-size: var(--fs-600);
}



/*--------  Pages (i.e. Panels in SPA) ------- */

main {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}


/* ------- Main navigation and Reveal animation ----------- */
/* We prefer semantic css here. */

.menu-toggle {
    position: fixed;
    top: 3%;
    right: 3%;
    width: 24px;
    /*  Don't use rem here, since on small screens .425rem will be small. For styling component
        it's ok to use px.
    */
    height: 10px;
    display: flex;
    flex-direction: column;
    cursor: pointer;
    justify-content: space-between;
    z-index: 3;
}

.menu-toggle span {
    position: relative;
    width: 100%;
    height: 3px;
    background-color: black;
    transition: 0.5s;
    transform-origin: center;
}

.menu-toggle[aria-expanded="true"] span:nth-child(1) {
    position: absolute;
    transform: rotate(45deg);
}

.menu-toggle[aria-expanded="true"] span:nth-child(2) {
    position: absolute;
    transform: rotate(-45deg);
}

.to-reveal {
    display: block;
    /*  padding is needed to prevent inner elements touch the edges. If you remove it you would see
        the touching edge problem in [error-container] for instance
    */
    padding: .125rem;
    overflow: hidden;
    transition: 0.3s;
    will-change: transform;
}

.to-reveal > * {
    transform: translateY(100%);
    opacity: 0;
    transition: 0.3s;
    will-change: transform;
}

.to-reveal.active > * {
    opacity: 1;
    transform: translateY(0);
}

/*  aria-current is based on:
    https://stackoverflow.com/questions/19604677/what-aria-state-role-to-use-for-current-page-in-navigation.
    A very good explanation with examples in:
    https://demos.tink.uk/aria-current/.
    https://tink.uk/using-the-aria-current-attribute/.
*/

nav[aria-label="Main Menu"] {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    min-height: 100vh;
    opacity: 0;
    pointer-events: none;
    transition: 0.3s;
    background-color: #e2d9d9e4;
}

nav[aria-label="Main Menu"].active {
    pointer-events: all;
    /* We must set higher z-index than <main>. Otherwise cursor won't be shown as pointer. */
    z-index: 1;
    opacity: 1;
}

nav[aria-label="Main Menu"] ul {
    list-style: none;
}

nav[aria-label="Main Menu"] a {
    color: black;
    text-decoration: none;
    display: block;
    font-size: var(--fs-600);
    cursor: pointer;
}

nav[aria-label="Main Menu"] a[aria-current="page"] {
    font-weight: bold;
}

nav[aria-label="Main Menu"] a:hover {
    color: var(--clr-accent-hover);
}

.nav-item-group {
    position: absolute;
    bottom: 3%;
    left: 3%;
    min-height: 100px;
}

.nav-item-group ul {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: .5rem;
}

nav[aria-label="Main Menu"] .to-reveal {
    position: relative;
    overflow: hidden;
}

nav[aria-label="Main Menu"] .to-reveal a {
    transform: translateY(100%);
    transition: 0.3s;
}


nav[aria-label="Main Menu"] .to-reveal.active a {
    transform: translateY(0);
}

nav[aria-label="Main Menu"] .nav-item span {
    font-size: var(--fs-300);
}


/* ------------ Error ------------------ */
.error-container {
    width: 100%;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 1rem;
}

.error-container .error-title {
    font-size: var(--fs-600);
    color: var(--clr-dark-red);
}

.error-container p {
    font-family: 'Courier New', Courier, monospace;
}

.error-container button {
    margin: 0 auto;
    padding: 0.615rem 2rem;
    font-size: var(--fs-400);
    border-radius: 100vh;
    font-weight: 500;
    background: #fff;
    color: black;
    outline: none;
    border: 2px solid black;
    border-radius: 100vh;
    cursor: pointer;
}


/* ----------  loader spinner --------  */
/* Copied from https://cssloaders.github.io/ with a few changes. */
.loading-container {
    height: 100%;
    /*  Since we don't have a specific height on <section> elements (only have min-height), so height:100%
        for this container doesn't give our desired display.
    */
    min-height: 90vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.loading-spinner {
    display: block;
    position: relative;
    height: 32px;
    width: 120px;
    border-bottom: 5px solid #000;
    box-sizing: border-box;
    animation: balancing 2s linear infinite alternate;
    transform-origin: 50% 100%;
}

.loading-spinner::before {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 26px;
    height: 26px;
    border-radius: 50%;
    background: #7a0202;
    animation: ballbns 2s linear infinite alternate;
}

.loading-spinner::after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: 0;
    height: 20px;
    width: 20px;
    transform: translate(-50%, 100%);
    border-radius: 50%;
    border: 6px solid #000;
}

@keyframes ballbns {
    0% {
        left: 0;
        transform: translateX(0%);
    }

    100% {
        left: 100%;
        transform: translateX(-100%);
    }
}

@keyframes balancing {
    0% {
        transform: rotate(-15deg);
    }

    50% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(15deg);
    }
}
